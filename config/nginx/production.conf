
worker_processes 1;

error_log /home/changer/shared/log/nginx-error.log info;
pid /home/changer/shared/log/nginx.pid;

events {
	worker_connections  8192;
	use epoll;
}

http {
    
           passenger_root /usr/lib/ruby/gems/1.8/gems/passenger-2.2.5;
           passenger_ruby /usr/bin/ruby;
           passenger_default_user ezo; 
  include		/opt/nginx/conf/mime.types;
  default_type	application/octet-stream;

  log_format main
		'$remote_addr - $remote_user [$time_local] '
        '"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';

  sendfile        on;
  tcp_nopush     on;
  keepalive_timeout  65;
  gzip  on;
									       
server {
        listen       0.0.0.0:80;
        server_name  localhost;
        passenger_enabled on;
        root /home/ezo/dev/pronix_project_1/hfilehosting/public;
        access_log  /home/ezo/dev/pronix_project_1/hfilehosting/log/nginx-access.log;

      location /download_check { 

             rewrite .* /check_exp_download/$t?f=$f&bs=$body_bytes_sent break;
             proxy_pass http://127.0.0.1:3000;

             proxy_redirect     off;
             proxy_set_header   Host             $host;
             proxy_set_header   X-Real-IP        $remote_addr;
             proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

      }

      location /download/ {
             set $for_check $uri;

             if ($for_check ~ "^/download/(.{32})(.*)$" ) { 
                    set $t $1; 
                    set $f $2;
             }

             set $user_cookie $http_cookie;

             rewrite "^/download/(.{32})(.*)$"  /$2  break;
             root /home/ezo/dev/pronix_project_1/hfilehosting/tmp/hdfs_temp;
             post_action /download_check;
             internal;
        }        

 
        location /download_from_hadoop/ {
             set $for_check $uri;

             if ($for_check ~ "^/download_from_hadoop/(.{32})(.*)$" ) { 
                    set $t $1; 
                    set $f $2;
             }

             set $user_cookie $http_cookie;
             set $limit_rate  512k;
             rewrite "^/download_from_hadoop/(.{32})(.*)$" /streamFile?filename=/user/ezo/$2  break;

             proxy_pass http://localhost:50075;
             proxy_redirect     off;
             proxy_set_header   Host             $host;
             proxy_set_header   X-Real-IP        $remote_addr;
             proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

             post_action /download_check;
             internal;
        }        


     }
}

